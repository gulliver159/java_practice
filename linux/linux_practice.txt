Создать файл hello.txt  с текстом “Hello world”.
Добавить в этот файл (разделяя пустыми строками)
свои имя и фамилию, 
текущую дату 
имя пользователя :
cd ~ переходим в домашний каталог
mkdir linux_ex создаем подкаталог
cd linux_ex переходим в него
touch hello.txt создаем файл
записываем в него текст, перенаправляя поток вывода с консоли в файл:
echo "Hello world" > hello.txt
echo -e "Екатерина Рогожина\n$USER" >> hello.txt
date +%D >> hello.txt

содержимое домашнего каталога (нерекурсивно, список имен файлов, включая скрытые)
содержимое корневого каталога (нерекурсивно)
ls -a ~/ >> hello.txt (-a для отображения и скрытых файлов)
ls / >> hello.txt

содержимое каталога /etc
ls /etc >> hello.txt
только файлы в каталоге /etc
find /etc -type f >> hello.txt
только подкаталоги в каталоге /etc (нерекурсивно)
find /etc -type d -maxdepth 1 >> hello.txt

содержимое файла /etc/passwd
cat /etc/passwd >> hello.txt

первый столбец файла /etc/passwd (список юзеров)
cut -d: -f1 /etc/passwd » hello.txt

содержимое файла /etc/group
cat /etc/group >> hello.txt

первый столбец файла /etc/group (список групп)
cut -d: -f1 /etc/group » hello.txt

первую и последнюю строки файла /etc/group
head -1 group » /home/user1/linux_ex/hello.txt
tail -1 group » /home/user1/linux_ex/hello.txt



Вывести hello.txt с прокруткой
less hello.txt

Разбить hello.txt на файлы размером 1к, затем собрать обратно
split -b 1K hello.txt (-b так как разбиваем по размеру)
cat xaa xab xac > hello.txt (соединяем файлы, перенаправляя поток вывода в нужный нам файл)

Заменить в hello.txt ‘/’ на ‘\’
tr '/' '\' < hello.txt команда tr берет данные для замены, читая файл




Скопировать /var/log в текущий каталог (кроме файлов без доступа) с сохранением времени модификации. В текущем каталоге должен появиться ./var/log 
cp -Rp --parents /var/log/ .  для сохранения времени модификации использован параметр -p, а для копирования не просто каталога log, а именно ветки /var/log/ использован параметр --parents. Ну и для копирования каталога а не файла -R.

Для полученной копии
1) вывести объем занимаемого места
du -s var    параметр -s для вывода занимаемый объем всей папки, а не каждого файла

вывести все файлы, начинающиеся на ‘a’ (не каталоги)
find var/log/a* -type f  для выборки только файлов добавлен оператор -type f, также использована маска, так как название файла начинается на букву а, то за ней может идти произвольное количество символов (*)

удалить все файлы, начинающиеся на ‘a’ (не каталоги). Как убедиться, что выполнено правильно?
find var/log/a* -type f | xargs rm  Чтобы убедиться, что выполнено правильно, можно вызвать предыдущую команду, она должна будет вернуть пустую строку.

вывести все файлы со временем последней модификации больше 5 дней;
find var/log/ -type f -mtime +5
вывести все файлы со временем последней модификации меньше 5 дней;
find var/log/ -type f -mtime -5


создать каталог archive и переместить туда файлы (не каталоги) со временем	 модификации больше 5 дней.  
find var/log/ -type f -mtime +5 | xargs mv -t archive  используем команду xargs через конвейер для передачи аргумента из первой команды во вторую

переместить файлы как в прошлом задании, но сохраняя структуру каталогов
find var/log/ -type f -mtime +5 -exec cp --parents -Rpt archive/ {} \; -exec rm {} \;
Также стоит удалить оставшиеся пустые папки:
find var/log/ -type d -empty -delete

Найти все файлы (рекурсивно) с расширением jar в каталогах /opt и /usr.
find /opt /usr -iname '*.jar' параметр -iname нужен для поиска по именам файлов, а также он отвечает за игнорирование регистра

Найти все каталоги, содержащие файлы с расширением jar в каталогах /opt и /usr, вывести по одному разу.
find /opt /usr -type f -iname '*.jar' | xargs dirname | uniq  командой dirname выводим текущие каталоги для найденных файлов, а команда выводит повторяющиеся каталоги по одному разу

Найти все файлы с расширением java, созданные месяц назад плюс-минус одна неделя.

find -type f -iname '*.java' -newermt $(date --date='last month'+'last week' +%F) \! -newermt $(date --date='last month'+'next week' +%F) -ls
временной промежуток, в котором необходимо искать файлы, задается командой date, сохраняется как локальная переменная и передается команде -newermt



В двух заданных каталогах должен быть одинаковый набор файлов. Нужно в этом убедиться, т.е. проверить, что совпадают множества файлов, имена и содержимое.
diff -ry  folder1 folder2   параметр -r для рекурсивного сравнения каталогов, -y для удобного вывода в два столбца 

Создать с помощью touch несколько файлов 1.MP3, 2.MP3… Написать команду для группового переименования расширений в нижний регистр, т.е. должно получиться 1.mp3, 2.mp3...
touch 1.MP3 2.MP3 3.MP3
rename 's/.MP3/.mp3/g' *.MP3  с помощью s указываем, что нам требуется замена, затем идет строка которую будем замещать (.MP3), далее на которую заменим (.mp3) и g=global, то есть замещаем все найденные файлы


Установить вручную (без apt-get) java и maven последней версии (можно взять OpenJDK https://jdk.java.net/14/ скачать с помощью wget.  Если не работает буфер обмена, можно создать короткую ссылку, например, https://clck.ru/Qg6LM ).
Добавить путь запуска в переменную PATH, создать переменные JAVA_HOME и M2_HOME. Выполнить сборку java проекта (создать простой проект типа HelloWorld или загрузить из заочной школы).

java:
sudo mkdir -p /usr/lib/jvm  создаем каталог, в котором будет хранится java
cd /usr/lib/jvm   переходим в него
sudo wget https://clck.ru/Qg6LM   скачиваем архив
sudo tar -xf Qg6LM -C /usr/lib/jvm   распаковываем его
sudo su  заходим от имени суперпользователя для редактирования файла /etc/bash.bashrc
export JAVA_HOME=/usr/lib/jvm/jdk-14.0.2 >> /etc/bash.bashrc  дописываем в файл добавление переменных окружения

maven: (аналогично java)
sudo mkdir -p /usr/lib/maven
cd /usr/lib/maven
sudo wget https://apache-mirror.rbc.ru/pub/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
sudo tar -xf apache-maven-3.6.3-bin.tar.gz -C /usr/lib/maven
export M2_HOME=/usr/lib/maven/apache-maven-3.6.3 >> /etc/bash.bashrc

Добавляем путь запуска в переменную PATH
export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$PATH >> /etc/bash.bashrc

Создаем java проект с выводом Hello World! и запускаем его
touch HelloWorld.java
java -classpath . HelloWorld.java


Проанализировать загрузку процессора, объем памяти. Вывести информацию по использованию места в файловой системе.
vmstat -w   выводим информацию об использовании процессора и оперативной памяти
df -h --total   выводим информацию об использовании дискового пространства

Найти самые большие каталоги (рекурсивно до уровня 2).
du -Sh --max-depth=2 | sort -rh | head -n 5   Если необходимо найти самые большие каталоги, не учитывая размер их подкаталогов, то необходимо использовать параметр -S, если в задании предполагалось учитывать размер подкаталогов, то необходимый вариант команды:
du -h --max-depth=2 | sort -rh | head -n 5   с помощью параметра -h у команды du размер каталогов представляется в удобочитаемом виде, параметром --max-depth устанавливаем глубину рекурсии
Сортируем в обратном порядке (-r) удобочитаемые числа (2K, 1G) (-h) и выводим только 5 самых больших каталогов


Создать двух юзеров (напр., ivanov, petrov), создать каталог /shared и дать полный доступ этим двум юзерам. У остальных не должно быть доступа даже на чтение.
sudo groupadd test_group  создаем в группу, в которую затем добавим нужных нам пользователей
sudo useradd ivanov -g test_group создаем пользователей и сразу их добавляем в группу
sudo useradd petrov -g test_group
sudo chgrp test_group /shared  меняем группу у каталога на созданную нами
sudo chmod =070 /shared/  и устанавливаем права доступа, для группы полные (7), для всех остальных не будет никаких прав (0)	 

Установить MySQL и создать базу ttschool, заполнить данными. Выполнить дамп базы с архивированием в файл посредством named pipe, затем восстановить из файла также посредством named pipe.

Устанавливаем mysql
sudo apt-get install mysql-server
service mysql start
sudo mysql -u root -p
Далее пишем sql код по созданию базы данных и ее наполнению.
Также создаем пользователя
mkfifo mysql_pipe
gzip -9 -c < mysql_pipe > ttschool_dump.gz & mysql dump -u admin -p pass ttschool > mysql_pipe
rm mysql_pipe


Затем разархивируем и передаем команде mysql, увы с помощью named pipe составить команду не получилось(
gunzip < ttschool_dump.gz | mysql -u admin -ppassword ttschool
